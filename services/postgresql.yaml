# CronJob
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: backup-database
spec:
  schedule: "0 22 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
            - name: recario-storage
              persistentVolumeClaim:
                claimName: recario-csv-pvc
          containers:
          - name: backup-database
            image: postgres:12.3
            envFrom:
              - configMapRef:
                  name: rails-env-config
            args:
            - /bin/sh
            - -c
            - cd /var/backups && pg_dump -Fc -h postgresql -U user -d recario > ./recario-$(date +%s).sql.dump && ls -tp | grep -v '/$' | tail -n +6 | xargs -d '\n' -r rm --
            volumeMounts:
              - mountPath: "/var/backups"
                subPath: "postgres-backups"
                name: recario-storage
          restartPolicy: OnFailure
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgresql
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      volumes:
        - name: recario-storage
          persistentVolumeClaim:
            claimName: recario-csv-pvc
      containers:
      - image: postgres:12.3
        name: postgresql
        envFrom:
          - configMapRef:
              name: rails-env-config
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data"
            subPath: "postgres-data"
            name: recario-storage
          - mountPath: "/var/backups"
            subPath: "postgres-backups"
            name: recario-storage
